#!/usr/bin/env bash

function docker_handle_request() {
  docker_repository="$1"
  docker_version="$2"
  docker_internal_port="$3"
  request="$(cat)"

  docker_id="$(curl -s "http://${DOCKER_CONTROLLER}/running/${docker_repository}/${docker_version}")"
  if [[ -z "$docker_id" ]];then
    log "docker: launch new container from repository: ${docker_repository}"
    docker_id="$(curl -s "http://${DOCKER_CONTROLLER}/launch/${docker_repository}/${docker_version}")"
  fi
  if [[ -z "$docker_id" ]];then
    log "docker: ${docker_repository} could not launch container"
    exit 1
  fi
  docker_port="$(curl -s "http://${DOCKER_CONTROLLER}/publicport/${docker_id}/${docker_internal_port}")"
  if [[ -z "$docker_port" ]];then
    log "docker: ${docker_repository} could not find public port"
    exit 1
  fi
  for i in {1..10}; do 
    log "docker_request: ${docker_id} ${docker_repository} localhost:${docker_port}${docker_request_uri}"
    response="$( \
      echo -e "${request}\n" | socat -t 10 - TCP:localhost:${docker_port},shut-none \
    )"
    if [[ -n "$response" ]];then
      break
    fi
    log "docker: [${docker_id}] response was empty retry in 0.1 seconds"
    sleep 0.2
  done
  log "docker_response: [${docker_id}] $(sed -n '1p' <<<"$response")"
  sed -n '1p' <<<"${response}"
  echo "Docker_Image_Name: ${docker_id}"
  echo "Custon_Header: injected"
  sed -n '2,$p' <<<"${response}"
}

